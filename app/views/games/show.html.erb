<p><%= link_to 'Back', games_path %></p>

<audio controls loop>
  <source src="/elevator.mp3" type="audio/mpeg">
  Your browser does not support the audio element.
</audio>

<p>
  <strong>Playing in room: <%= @game.room_name %></strong>
</p>

<div id="status">

<div class="main-display text-center">
  <% if @user.is_game_host? %>
    <div class="btn btn-lg btn-success start-game-btn">Start Game!</div>
  <% end %>
  <%= link_to 'Leave Game!', game_leave_path(@game), class: 'btn btn-lg btn-primary leave-game-btn"' %>
</div>


<!-- game window -->
<div id="game-window">
  <div id="players" class="text-center">
    <% if @other_players.present? %>
      <% @other_players.each_with_index do |player, i| %>
        <div class="player-container" data-player-id="<%= player.id %>"
          data-player-username="<%= player.username %>">
          <%= image_tag @player_icons[i], class: 'player' %>
          <div class="username"><%= player.username %></div>
        </div>
      <% end %>
    <% end %>
  </div>

  <div id="deck-discard">
    <div id="deck" class="card-container"><%=image_tag("deck.jpg")%></div>
    <div id="discard" class="card-container">Discard</div>
  </div>

  <div class="game-message-field text-center"><div class="message"></div></div>

  <div id="hand"></div>
</div>


<!-- chat box -->
<div id="chat-wrapper">
  <div id="menu">
    <p class="welcome"><%= @game.room_name %> Chat <b></b></p>
    <p class="logout"><a id="exit" href="#">Exit Chat</a></p>
    <div style="clear:both"></div>
  </div>

  <!-- chat text -->
  <div id = "chat">
  	<div id="chatbox"></div>
  </div>

  <form id="txtbox">
  	<!-- send -->
  	<input name="submitmsg" type="submit" id="submitmsg" value="Send" style="float:right"/>

	   <!-- user input -->
  	<div style="overflow: hidden; padding-right: .5em">
      <input id="usermsg" type="text" autocomplete="off"
             placeholder="Send a message..." maxlength="4000" style="width:100%"
       />
    </div>
  </div>
</div>

<% content_for :javascript do %>
  <%= javascript_include_tag 'chat' %>
<script>
  var cards = {};
  cards['attack'] = <%= raw(@attack_cards.map { |c| image_tag(c) }) %>;
  cards['Beard Cat'] = <%= raw(@beard_cat.map { |c| image_tag(c) }) %>;
  cards['Hairy Potato Cat'] = <%= raw(@hairy_potato_cat.map { |c| image_tag(c) }) %>;
  cards['Rainbow Puking Cat'] = <%= raw(@rainbow_puking_cat.map { |c| image_tag(c) }) %>;
  cards['Taco Cat'] = <%= raw(@taco_cat.map { |c| image_tag(c) }) %>;
  cards['Watermelon Cat'] = <%= raw(@watermelon_cat.map { |c| image_tag(c) }) %>;
  cards['defuse'] = <%= raw(@defuse_cards.map { |c| image_tag(c) }) %>;
  cards['exploding_kitten'] = <%= raw(@exploding_kitten_cards.map { |c| image_tag(c) }) %>;
  cards['favor'] = <%= raw(@favor_cards.map { |c| image_tag(c) }) %>;
  cards['see_the_future'] = <%= raw(@see_the_future_cards.map { |c| image_tag(c) }) %>;
  cards['nope'] = <%= raw(@nope_cards.map { |c| image_tag(c) }) %>;
  cards['shuffle'] = <%= raw(@shuffle_cards.map { |c| image_tag(c) }) %>;
  cards['skip'] = <%= raw(@skip_cards.map { |c| image_tag(c) }) %>;

  $(function() {
    // for authenticating AJAX requests
    var headers = {};
    headers['X-CSRF-Token'] = AUTH_TOKEN;

    // for keeping track of how many players have joined the game so far
    var playerCounter = <%= @game.players.length - 1 %>;
    var playerIcons = <%= raw(@player_icons.map { |i| image_tag(i, class: 'player') }) %>;

    // for when someone is the victim of a favor card
    var thiefId = null;

    // Enable pusher logging - don't include this in production
    Pusher.log = function(message) {
      if (window.console && window.console.log) {
        window.console.log(message);
      }
    };

    var gameChannel = pusher.subscribe('<%= @main_channel %>');
    var userChannel = pusher.subscribe('<%= @user_channel %>');

     // listen for pusher events for the whole game
     gameChannel.bind('announcement', function(data) {
       printToChat(data.message, { isGameMessage: true});
     });

    gameChannel.bind('game.player.joined', function(data) {
      spawnPlayer(data);
      printToChat('User '+ data.username + ' joined the game!', {
        isGameMessage: true
      });
    });

    gameChannel.bind('game.player.left', function(data) {
      $('.player-container[data-player-id="' + data.id + '"]')
        .fadeOut(function() {
          $(this).remove();

          printToChat('User '+ data.username + ' left the game. :(', {
            isGameMessage: true
          });
        });
    });

    gameChannel.bind('game.start', function(data) {
      printToChat('The game has started.', { isGameMessage: true });
      console.log(data);
    });

    // pusher events for the player
    userChannel.bind('announcement', function(data) {
      printToChat(data.message, { isGameMessage: true});
    });

    userChannel.bind('player.errors', function(data) {
      printToChat(data.error, {
        isGameMessage: true,
        isError: true
      });
    });

    userChannel.bind('player.turn.start', function(data) {
      if (data.for_self) {
        printToChat("It's your turn!", { isGameMessage: true });
      } else {
        // data.player_id is available also
        printToChat("It's " + data.username + "'s turn.", {
          isGameMessage: true
        });
      }
    });

    userChannel.bind('player.turn.end', function() {
      printToChat('You ended your turn.', { isGameMessage: true });
    });

    userChannel.bind('player.hand.updated', function(data) {
      if (data.action === 'add') {
        spawnCard(data.card);
      } else if (data.action === 'remove') {
        discardCard(data.card_id);
      }

      if (data.did_lose) {
        // insert cool exploding animation or something here
        alert("You drew an exploding kitten! Since you don't have a "+
        "defuse card, you lose!");
      }
    });

    userChannel.bind('player.chat', function(data) {
      var msg = data.username + ': ' + data.message;
      printToChat(msg, { isUserMessage: true });
    });

    userChannel.bind('player.deck.see_the_future', function(data) {
      alert('You saw the future! Look in the console to view the cards.');
      console.log(data.cards);
    });

    userChannel.bind('player.steal_card_favor', function(data) {
      thiefId = data.id;
      $('#hand').addClass('steal-card');
      $('.game-message-field .message')
        .text(data.username + ' played a favor card! Choose a card from your '+
        ' hand to give up.');
      $('.game-message-field').show();
      $('.game-message-field').fadeOut(8000);
    });

    userChannel.bind('player.win', function(data) {
      alert(data.message);
    });


    // DOM events
    <% if @user.is_game_host? %>
      $('.start-game-btn').click(function() {
        $.ajax({
          method: 'POST',
          url: '<%= game_start_path(@game) %>',
          headers: headers
        });
      });
    <% end %>

    $('#game-window').on('click', '.player-container', function() {
      $(this).animate({
        height: ($(this).height() == 150) ? 155 : 150,
        width: ($(this).width() == 150) ? 155 : 150
      }, 200);

      $('.player-container.targeted').not(this).removeClass('targeted');
      $(this).toggleClass('targeted');
    });

    $('#deck').click(function() {
      $.ajax({
        url: '<%= game_draw_path(@game) %>',
        headers: headers
      });
    });

    $('#discard').droppable({
      accept: '.draggable-card',
      hoverClass: 'hovered',
      drop: handleDropEvent
    });

    $('.draggable-card').draggable({
      cursor: 'move',
      snap: '#discard',
      containment: '#game-window',
      stack: '.draggable-card'
    });

    $('#game-window').on('click', '.card', function() {
      $(this).animate({
        height: ($(this).height() == 300) ? 150 : 300,
        width: ($(this).width() == 180) ? 90 : 180
      }, 200);

      var container = $(this).parent('.card-container');
      container.toggleClass('focused');
      displayActionDialog(container, $('#hand').hasClass('steal-card'));
    });

    // send chat

    $('#txtbox').submit(function(e) {
      e.preventDefault();

      var message = $('#usermsg').val();

    	if (message !== '') {
    		$.ajax({
          url: '<%= game_send_chat_path(@game) %>',
          method: 'POST',
          data: { message: message },
          headers: headers
        });

    		$('input#usermsg').val("");
    	}
    });

    $('#game-window').on('click', '.action-dialog .action.play', function() {
      var card = $(this).parent().siblings('.card');
      var card_id = card.data('card-id');

      if ($(card).hasClass('requires-target')) {
        if ($('.player-container.targeted').length !== 0) {
          var target_id = $('.player-container.targeted').data('player-id');
          sendPlayCardRequest(card_id, target_id);
        } else {
          $('.game-message-field .message')
            .text('You must first target a player by clicking on them in order to play this card.');
          $('.game-message-field').show();
          $('.game-message-field').fadeOut(10000);
        }
      } else {
        sendPlayCardRequest(card_id);
      }
    });

    $('#game-window').on('click', '.action-dialog .action.choose', function() {
      $('#hand').removeClass('steal-card');

      var card_id = $(this).parent().siblings('.card').data('card-id');
      $.ajax({
        headers: headers,
        url: '<%= game_give_card_to_thief_path @game %>',
        data: { target_card_id: card_id, favor_player_id: thiefId },
        method: 'POST'
      });

      // remove the card container
      $(this).parent().parent().remove();
    });

    var sendPlayCardRequest = function(card, target) {
      $.ajax({
        headers: headers,
        url: '<%= game_play_card_path(@game) %>',
        data: { card_id: card, target_player_id: target },
        method: 'POST'
      });
    };

    $('#game-window').on('click', '.action-dialog .action.description', function() {
      alert($(this).parent().siblings('.card').data('description'));
    });

    // helper functions

    var printToChat = function(message, options) {
      var messageContainer = $('<div class="msg"></div>');
      var timestamp = $('<span class="timestamp">');

      if (options) {
        if (options.isGameMessage) messageContainer.addClass('game-msg');
        if (options.isError) messageContainer.addClass('err-msg');
        if (options.isUserMessage) messageContainer.addClass('user');
      }

      var date = new Date();
      var rawHours = date.getHours();
      var timeOfDay = rawHours >= 12 ? 'PM' : 'AM';
      var hours = rawHours !== 0 ? rawHours - 12 : '00'; // getHours returns military time
      var minutes = date.getMinutes();
      var seconds = date.getSeconds();

      timestamp.text(
        '[ ' + hours + ':' + minutes + ':' + seconds + ' ' + timeOfDay + ' ]'
      );

      messageContainer
        .text(message)
        .prepend(timestamp);

      $('#chatbox').append(messageContainer);
      $('#chat').animate({
           scrollTop: $('#chatbox').height()
      }, 'fast');
    };

    function handleDropEvent( event, ui ) {
      var draggable = ui.draggable;
      alert( 'Card "' + draggable.attr('id') + '" was discarded!' );
      draggable.remove();
    }

    var spawnCard = function(card) {
      var cardContainer = $('<div>').addClass('card-container');
      var img = $(_.sample(cards[card.card_name]));
      img
        .addClass('card draggable-card')
        .attr('id', card.card_name)
        .attr('data-card-id', card.id)
        .attr('data-description', card.description);

      if (card.requires_target) {
        img.addClass('requires-target');
      }

      img.draggable({
        cursor: 'move',
        snap: '#discard',
        containment: '#game-window',
        stack: '.draggable-card'
      });

      cardContainer.append(img);
      $('#hand').append(cardContainer);
    };

    var discardCard = function(id) {
      $('.card[data-card-id="' + id + '"]').parent('.card-container').remove();
    };

    var displayActionDialog = function(cardContainer, stealCard) {
      if (cardContainer.hasClass('focused')) {
        var dialog = $('<div>').addClass('action-dialog');
        var description = $('<div>')
          .addClass('action description')
          .text('Description');

        if (stealCard) {
          var chooseButton = $('<div>').addClass('action choose').text('Choose this');
          dialog.append(chooseButton);
        } else {
          var play = $('<div>').addClass('action play').text('Play');
          dialog.append(play);
        }

        dialog.append(description);
        cardContainer.append(dialog);
      } else {
        cardContainer.find('.action-dialog').remove();
      }
    };

    var spawnPlayer = function(player) {
      var playerContainer = $('<div>').addClass('player-container');
      playerContainer.attr('data-player-id', player.id);
      playerContainer.attr('data-player-username', player.username);

      var img = $(playerIcons[playerCounter++]);
      var userNameDisplay = $('<div>')
        .addClass('username').text(player.username);

      playerContainer.append(img);
      playerContainer.append(userNameDisplay);
      $('#players').append(playerContainer);
    };

  });
</script>
<% end %>
